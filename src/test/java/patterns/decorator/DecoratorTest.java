package patterns.decorator;

import org.testng.Assert;
import org.testng.annotations.Test;

/**
 * Каждый кто писал хотя бы 1 автотест использовал декоратор в своем проекте, по сути в джаве все что является аннотацией
 * это является декоратором. Декоратор нужен, чтобы изменить логику метода, при этом чтобы метод не знал об этой логике.
 * Внутреннее изменения невозможно, внешнее возможно. К примеру у нас есть метод БилдерТест есть аннотация @Test, если
 * убрать аннотацию пропадает возможность запуска теста и суть в том, что сама логика тестового метода не меняется, но
 * внешняя логика она добавилась ( с добавление @Test добавилась возможность запустить тест)
 * Декоратором можно модифицировать логику автотестов в работе с завершением автотестов, либо логику перед запуском,
 * либо в режиме реального действия (закидывать какие-то параметры))
 */

public class DecoratorTest {

    @Test
    public void someMethod(){
        System.out.println("Какая-то логика");
        Assert.assertTrue(2<4 );
    }

}
